# docker-compose.yml (Versão Final e Definitiva)
services:
  db-api:
    image: postgres:15-alpine
    container_name: db-api
    environment:
      POSTGRES_USER: ${POSTGRES_USER_API}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_API}
      POSTGRES_DB: ${POSTGRES_DB_API}
    volumes:
      - api_db_data:/var/lib/postgresql/data
    networks:
      - fiscal-net
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_API} -d ${POSTGRES_DB_API}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db-mlflow:
    image: postgres:15-alpine
    container_name: db-mlflow
    environment:
      POSTGRES_USER: ${POSTGRES_USER_MLFLOW}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_MLFLOW}
      POSTGRES_DB: ${POSTGRES_DB_MLFLOW}
    volumes:
      - mlflow_db_data:/var/lib/postgresql/data
    networks:
      - fiscal-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_MLFLOW} -d ${POSTGRES_DB_MLFLOW}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  mlflow-server:
    build:
      context: ./mlflow_docker
    container_name: mlflow-server
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=postgresql://${POSTGRES_USER_MLFLOW}:${POSTGRES_PASSWORD_MLFLOW}@db-mlflow:5432/${POSTGRES_DB_MLFLOW}
      - MLFLOW_ARTIFACT_URI=/mlruns_data
    command: >
      sh -c "
        echo 'Atualizando o banco de dados MLflow...' &&
        mlflow db upgrade postgresql://${POSTGRES_USER_MLFLOW}:${POSTGRES_PASSWORD_MLFLOW}@db-mlflow:5432/${POSTGRES_DB_MLFLOW} &&
        echo 'Iniciando o servidor MLflow...' &&
        gunicorn --bind 0.0.0.0:5000 mlflow.server:app
      "
    ports:
      - "5000:5000"
    networks:
      - fiscal-net
    volumes:
      - mlflow_artifacts:/mlruns_data
    depends_on:
      db-mlflow:
        condition: service_healthy
    # --- CORREÇÃO: Healthcheck RESTAURADO ---
    # Isto é essencial para a condição 'service_healthy' da API funcionar.
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:5000/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 20s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    env_file:
      - .env
    command: uvicorn src.api:app --host 0.0.0.0 --port 8000 --reload --reload-dir src
    ports:
      - "8000:8000"
    networks:
      - fiscal-net
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      db-api:
        condition: service_healthy
      mlflow-server:
        condition: service_healthy

volumes:
  api_db_data:
  mlflow_db_data:
  mlflow_artifacts:

networks:
  fiscal-net:
    driver: bridge